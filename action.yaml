name: RepoDynamics ReleaseMan
author: Armin Ariamajd
branding:
  icon: file-text
  color: blue

inputs:
  root-path:
    description: Root path of the repository.
    required: false
    default: "."
  output-path:
    description: Temporary output path to use.
    required: false
    default: "./__releaseman_outputs__"
  github-config:
    description: Configurations for GitHub release
    required: false
    default: ""
  zenodo-config:
    description: Configurations for Zenodo release
    required: false
    default: ""
  zenodo-sandbox-config:
    description: Configurations for Zenodo Sandbox release
    required: false
    default: ""
  github-token:
    description: A personal access token.
    required: false
    default: ""
  zenodo-token:
    description: A Zenodo API token.
    required: false
    default: ""
  zenodo-sandbox-token:
    description: A Zenodo Sandbox API token.
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Initialization
      shell: bash
      run: |
        # Initialization
        printf "\n$(cat ${{github.action_path}}/docs/media/logo/full.txt)\n\n"
        python "${{ github.action_path }}/action/script/log.py" "1. Initialization"
        python "${{ github.action_path }}/action/script/log.py" "1.1. Python Setup"
        # Copy ProMan requirements file to the workspace so that it can be used by SetupPython for caching
        cp "${{ github.action_path }}/action/requirements.txt" .
    - uses: actions/setup-python@v5
      with:
        python-version: 3.x
        cache: pip
        cache-dependency-path: requirements.txt
    - name: Environment Setup
      shell: bash
      run: |
        # Environment Setup
        python "${{ github.action_path }}/action/script/log.py" "1.3. Environment Setup"
        
        echo "::group::Pip Upgrade"
        python -m pip install --upgrade pip
        echo "::endgroup::"
        
        echo "::group::Requirements Installation"
        python -m pip install -r requirements.txt
        echo "::endgroup::"
        
        echo "::group::Action Installation"
        python -m pip install ${{ github.action_path }}/action
        echo "::endgroup::"
        
        echo "::group::Environment Overview"
        python -m pip list
        echo "::endgroup::"
    - name: Action
      id: action
      env:
        RD_RELEASEMAN__ROOT_PATH: ${{ inputs.root-path }}
        RD_RELEASEMAN__OUTPUT_PATH: ${{ inputs.output-path }}
        RD_RELEASEMAN__GITHUB_CONFIG: ${{ inputs.config }}
        RD_RELEASEMAN__ZENODO_CONFIG: ${{ inputs.zenodo-config }}
        RD_RELEASEMAN__GITHUB_TOKEN: ${{ inputs.github-token }}
        RD_RELEASEMAN__ZENODO_TOKEN: ${{ inputs.zenodo-token }}
        RD_RELEASEMAN__GITHUB_CONTEXT: ${{ toJSON(github) }}
      shell: bash
      run: |
        # Action
        python -m releaseman
